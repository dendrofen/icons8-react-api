{"version":3,"file":"static/js/913.bacf24f8.chunk.js","mappings":"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","sources":["components/GtihubCorner/image.js","components/GtihubCorner/index.js","components/HintBox/index.js","lib/utils.js","lib/hooks/withDebounce.js","lib/hooks/useSearchBox.js","components/SearchBoxDemo/Elements/Preloader.js","components/SearchBoxDemo/Elements/Search.js","lib/hooks/useSearchBoxInput.js","components/SearchBoxDemo/SearchBoxDomains.js","components/SearchBoxDemo/Elements/Buttons.js","components/SearchBoxDemo/Elements/SelectList.js","components/SearchBoxDemo/SearchBoxLetters.js","components/SearchBoxDemo/SearchBoxContacts.js","pages/Home.js"],"sourcesContent":["import './style.css';\n\nconst Image = () => {\n    return (\n        <svg width=\"80\" height=\"80\" className='octo' viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n            <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n            <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" className=\"octo-arm\"></path>\n            <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"></path>\n        </svg>\n    )\n}\n\nexport default Image;","import { Link } from \"@chakra-ui/react\";\nimport Image from \"./image\";\n\nconst GithubCorner = () => {\n    return (\n        <Link\n            href=\"https://github.com/dendrofen/react-search-box-hooks\"\n            className=\"github-corner\"\n            aria-label=\"View source on GitHub\"\n            isExternal\n        >\n            <Image />\n        </Link>\n    )\n}\n\nexport default GithubCorner;","import { Box, Circle } from \"@chakra-ui/react\";\n\nexport default function HintBox({ children }) {\n    return (\n        <Box pos={'relative'} width={'100%'}>\n            <Circle size={'2'} bg={'blue'} pos={'absolute'} left={'-4'} top={'2'} />\n            {children}\n        </Box>\n    )\n}","/**\n * Checks if two objects are shallowly equal, i.e. they have the same keys and values.\n * @param {Object} object1 - The first object to compare.\n * @param {Object} object2 - The second object to compare.\n * @returns {boolean} Returns `true` if the two objects are shallowly equal, `false` otherwise.\n */\nexport function shallowEquals(object1, object2) {\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (let key of keys1) {\n        if (object1[key] !== object2[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n\nChecks whether a value is empty.\n@param {any} value - The value to be checked for emptiness.\n@returns {boolean} - Returns true if the value is empty, otherwise false.\n*/\nexport function isEmpty(value) {\n    return (value == null || (typeof value === \"string\" && value.trim().length === 0));\n}","/**\n * Function that returns a debounced version of a callback function.\n * @param {number} timeout - The debounce timeout.\n * @param {function} callback - The function to debounce.\n * @param {object} debounceRef - A ref object used to store the current timeout ID.\n * @returns {function} The cancellation function.\n */\nexport default function withDebounce(timeout, callback, debounceRef) {\n    const onCancel = () => clearTimeout(debounceRef.current);\n\n    onCancel();\n    debounceRef.current = setTimeout(async () => {\n        await callback()\n    }, timeout);\n\n    return onCancel;\n}","import { shallowEquals } from \"../utils\";\nimport { startTransition, useCallback, useEffect, useReducer, useRef, useState } from \"react\";\nimport withDebounce from \"./withDebounce\";\n\n/**\n * A React hook that provides a search box for a given set of data.\n *\n * @param {function} queryFunc - Function to execute the search query. The function should accept a single argument which is an object of query parameters.\n * @param {object} initParams - Initial search query parameters.\n * @returns {object} - An object with the following properties:\n *   - items: The current search results.\n *   - totalCount: The total number of search results.\n *   - isLoading: A flag indicating whether a search is currently in progress.\n *   - params: The current search parameters.\n *   - dispatchParams: A function to update the search parameters.\n */\nexport default function useSearchBox(queryFunc, initParams) {\n    // Define state variables and ref.\n    const [items, setItems] = useState([]);\n    const [totalCount, setTotalCount] = useState();\n    const [isLoading, setLoading] = useState(true);\n    const debounceRef = useRef();\n\n    // UseReducer hook to handle search parameters.\n    const [params, dispatchParams] = useReducer(\n        (state, payload) => {\n            const update = (Array.isArray(payload) ? payload : [payload])\n                .reduce((prev, curr) =>\n                    (Object.assign(prev, { [curr.key]: curr.value })),\n                    Object.assign({}, state)\n                );\n            return shallowEquals(state, update) ? state : update;\n        },\n        initParams\n    );\n\n    // Define the onSearch function that performs the search.\n    const onSearch = useCallback(async () => {\n        if (!queryFunc) {\n            throw new Error(\"onSearch requires [query Function] as param\");\n        }\n\n        // Update the isLoading flag.\n        startTransition(() => {\n            setLoading(true);\n        })\n\n        // Call the query function with the current search parameters.\n        const [resItems, resTotal] = await queryFunc(params);\n\n        // Update the state with the new search results.\n        if (resItems) {\n            startTransition(() => {\n                setItems(resItems);\n                setTotalCount(resTotal);\n            })\n        }\n\n        // Update the isLoading flag.\n        startTransition(() => {\n            setLoading(false);\n        })\n\n    }, [setItems, queryFunc, params, setLoading]);\n\n    // Use the useEffect hook to perform the search and cancel any previous search when the parameters change.\n    useEffect(() => {\n        const onCancel = withDebounce(0, () => {\n            startTransition(() => {\n                onSearch();\n            })\n        }, debounceRef)\n\n        return () => onCancel();\n        // eslint-disable-next-line\n    }, [params])\n\n    // Return an object with the search results and other relevant information.\n    return { items, totalCount, isLoading, params, dispatchParams }\n}\n","import { Center, Spinner } from \"@chakra-ui/react\";\n\nexport default function Preloader() {\n    return (\n        <Center\n            pos={'absolute'}\n            left={0}\n            top={0}\n            boxSize={'100%'}\n            backdropFilter={'auto'}\n            backdropBlur={'sm'}\n        >\n            <Spinner />\n        </Center>\n    )\n}","import { IconButton, Input, InputGroup, InputRightElement } from \"@chakra-ui/react\";\nimport { useSearchBoxInput } from \"lib\";\nimport { MdOutlineClear } from 'react-icons/md';\n\nexport default function Search({ defaultValue, dispatchParams, paramKey, debounceTimeout }) {\n    const { ref, onInput, onChange, onClear, isClearable } = useSearchBoxInput(dispatchParams, paramKey, debounceTimeout);\n\n    return (\n        <InputGroup>\n            <Input pr={'12'} placeholder={'Search...'}\n                {...{ ref, onInput, onChange, defaultValue }}\n            />\n            {isClearable &&\n                <InputRightElement>\n                    <IconButton\n                        icon={<MdOutlineClear />}\n                        onClick={onClear}\n                        size={'sm'}\n                    />\n                </InputRightElement>\n            }\n        </InputGroup>\n    )\n}","import { isEmpty } from \"../utils\";\nimport { startTransition, useCallback, useRef, useState } from \"react\";\nimport withDebounce from \"./withDebounce\";\n\n/**\n * Hook for controlling an input element used in searching.\n * @param {function} dispatchParams - The `dispatchParams` function returned by `useSearchBox`.\n * @param {string} paramKey - The key of the query parameter to control with the input element.\n * @param {number} [debounceTimeout=1000] - The debounce timeout for the input element.\n * @returns {object} Object containing `ref`, `onInput`, `onChange`, `onClear`, and `isClearable`.\n */\nexport default function useSearchBoxInput(dispatchParams, paramKey, debounceTimeout = 1000) {\n    const ref = useRef();\n    const debounceRef = useRef();\n    const [isClearable, setClearable] = useState();\n\n    const onChange = useCallback((e) => {\n        startTransition(() => {\n            const value = e?._reactName ? e.target.value : e;\n            setClearable(isEmpty(value) === false);\n            withDebounce(debounceTimeout, () => dispatchParams({ key: paramKey, value }), debounceRef);\n        })\n    }, [dispatchParams, paramKey, debounceTimeout]);\n\n    const onInput = useCallback((e) => {\n        startTransition(() => {\n            setClearable(isEmpty(e.target.value) === false);\n        })\n    }, [setClearable]);\n\n    const onClear = useCallback(() => {\n        startTransition(() => {\n            if (ref?.current) ref.current.value = '';\n            setClearable(false);\n            withDebounce(0, () => dispatchParams({ key: paramKey, value: undefined }), debounceRef);\n        })\n    }, [ref, setClearable, paramKey, dispatchParams])\n\n    return { ref, onInput, onChange, onClear, isClearable };\n}","import {\n    Box, Button, Popover, PopoverArrow, PopoverBody, PopoverCloseButton, PopoverContent,\n    PopoverHeader, PopoverTrigger, Portal, Stack, Text\n} from \"@chakra-ui/react\";\nimport { useSearchBox } from \"lib\";\nimport { memo, useCallback } from \"react\";\nimport Preloader from \"./Elements/Preloader\";\nimport Search from \"./Elements/Search\";\n\nconst List = memo(function List({ items }) {\n    return (\n        items &&\n        <Stack boxSize={'100%'} overflow={'auto'}>\n            {items.map((item, index) => (\n                <Box key={index}>\n                    <Popover isLazy>\n                        {({ isOpen, onClose }) => (\n                            <>\n                                <PopoverTrigger>\n                                    <Button>{item.domain}</Button>\n                                </PopoverTrigger>\n                                {isOpen &&\n                                    <Portal>\n                                        <PopoverContent>\n                                            <PopoverArrow />\n                                            <PopoverCloseButton />\n                                            <PopoverHeader>Domain info</PopoverHeader>\n                                            <PopoverBody as={Stack}>\n                                                {item.A && <Text>A: {item.A.join(',')}</Text>}\n                                                {item.country && <Text>Country: {item.country}</Text>}\n                                                {<Text>isDead: {item.isDead}</Text>}\n                                                <Text>Update date: {item.update_date}</Text>\n                                            </PopoverBody>\n                                        </PopoverContent>\n                                    </Portal>\n                                }\n                            </>\n                        )}\n\n                    </Popover>\n                </Box>\n            ))}\n        </Stack>\n    )\n})\n\nexport default function SearchBoxDomains() {\n    const queryFunc = useCallback((params) => {\n        return new Promise(async (resolve) => {\n            let items, totalItems;\n\n            if (params.query) {\n                [items, totalItems] = await fetch(`https://api.domainsdb.info/v1/domains/search?domain=${params.query}`)\n                    .then(res => res.json())\n                    .then(res => [res.domains || [], res.total])\n                    .catch(() => [])\n            } else {\n                items = [];\n                totalItems = undefined;\n            }\n\n            resolve([items, totalItems])\n        })\n    }, [])\n\n    const { items, totalCount, isLoading, params, dispatchParams } = useSearchBox(\n        queryFunc,\n        { query: 'github.com', cat: undefined }\n    )\n\n    return (\n        <Stack w={'100%'} h={'80'}>\n            <Search {...{ dispatchParams, paramKey: 'query', defaultValue: params.query }} />\n\n            {!isLoading && totalCount !== undefined && <Text fontSize={'small'}>Domains found: {totalCount}</Text>}\n\n            <Box\n                boxSize={'100%'}\n                overflow={'hidden'}\n                shadow={'inner'}\n                className='border__solid'\n                p={'4'}\n                pos={'relative'}\n            >\n                {isLoading ? <Preloader /> : <List items={items} />}\n            </Box>\n        </Stack>\n    )\n}","import { Button, HStack } from \"@chakra-ui/react\";\n\nexport default function Categories({ dispatchParams, paramKey, value }) {\n    const items = ['🌳 trees', '💃 Rumba', 'books 📚'];\n\n    return (\n        <HStack px={'1'}>\n            {items.map((item, index) =>\n                <Button\n                    key={index}\n                    isActive={item === value}\n                    pointerEvents={item === value ? 'none' : 'auto'}\n                    size={'sm'}\n                    onClick={dispatchParams.bind(this, { key: paramKey, value: item })}\n                >{item}</Button>\n            )}\n        </HStack>\n    )\n}","import { Select } from '@chakra-ui/react';\n\nexport default function SelectList({ dispatchParams, paramKey, value }) {\n    const items = ['🌳 trees', '💃 Rumba', 'books 📚'];\n\n    return (\n        <Select placeholder='Select option'\n            onChange={e => dispatchParams({ key: paramKey, value: e.target.value })}\n            value={value}\n        >\n            {items.map((item, index) => (\n                <option key={index} value={item}>{item}</option>\n            ))}\n        </Select>\n    )\n}","import { Box, Button, HStack, Stack } from \"@chakra-ui/react\";\nimport { useSearchBox } from \"lib\";\nimport { memo, useCallback } from \"react\";\nimport Buttons from \"./Elements/Buttons\";\nimport Preloader from \"./Elements/Preloader\";\nimport Search from \"./Elements/Search\";\nimport SelectList from \"./Elements/SelectList\";\n\nconst List = memo(function List({ items }) {\n    return (\n        <HStack\n            boxSize={'100%'}\n            overflow={'auto'}\n            flexWrap={'wrap'}\n            spacing={0}\n            alignItems={'start'}\n            gap={'2'}\n        >\n            {items && items.map((item, index) => (\n                <Button key={index}>{item}</Button>\n            ))}\n        </HStack>\n    )\n})\n\nexport default function SearchBoxLetters() {\n    const queryFunc = useCallback((params) => {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                const text = [params.cat, params.query].filter(x => x).join('')\n                const items = Array.from(text);\n                resolve([items, items.length])\n            }, 300);\n        })\n    }, [])\n\n    const { items, isLoading, params, dispatchParams } = useSearchBox(\n        queryFunc,\n        { query: undefined, cat: undefined }\n    )\n\n    return (\n        <Stack w={'100%'} h={'80'}>\n            <Search {...{ dispatchParams, paramKey: 'query', value: params.query }} />\n            <Buttons {...{ dispatchParams, paramKey: 'cat', value: params.cat }} />\n            <SelectList {...{ dispatchParams, paramKey: 'cat', value: params.cat }} />\n\n            <Box\n                boxSize={'100%'}\n                overflow={'hidden'}\n                shadow={'inner'}\n                className='border__solid'\n                p={'4'}\n                pos={'relative'}\n            >\n                {isLoading ? <Preloader /> : <List items={items} />}\n            </Box>\n        </Stack>\n    )\n}","import {\n    Box, Button, Popover, PopoverArrow, PopoverBody, PopoverCloseButton, PopoverContent, PopoverTrigger, Portal, Stack, Text\n} from \"@chakra-ui/react\";\nimport { useSearchBox } from \"lib\";\nimport { memo } from \"react\";\nimport Preloader from \"./Elements/Preloader\";\nimport Search from \"./Elements/Search\";\n\nconst List = memo(function List({ items }) {\n    return (\n        items &&\n        <Stack boxSize={'100%'} overflow={'auto'}>\n            {items.map((item, index) => (\n                <Box key={index}>\n                    <Popover isLazy>\n                        {({ isOpen, onClose }) => (\n                            <>\n                                <PopoverTrigger>\n                                    <Button>{item.name}</Button>\n                                </PopoverTrigger>\n                                {isOpen &&\n                                    <Portal>\n                                        <PopoverContent>\n                                            <PopoverArrow />\n                                            <PopoverCloseButton />\n                                            <PopoverBody as={Stack}>\n                                                <Text>Name: {item.name}</Text>\n                                                <Text>Email: {item.email}</Text>\n                                                <Text>Phone: {item.phone}</Text>\n                                            </PopoverBody>\n                                        </PopoverContent>\n                                    </Portal>\n                                }\n                            </>\n                        )}\n\n                    </Popover>\n                </Box>\n            ))}\n        </Stack>\n    )\n})\n\nconst contacts = [\n    { name: 'John Doe', email: 'johndoe@example.com', phone: '555-1234' },\n    { name: 'Jane Smith', email: 'janesmith@example.com', phone: '555-5678' },\n    { name: 'Bob Johnson', email: 'bobjohnson@example.com', phone: '555-9012' },\n    { name: 'Mary Brown', email: 'marybrown@example.com', phone: '555-3456' },\n    { name: 'David Lee', email: 'davidlee@example.com', phone: '555-7890' },\n    { name: 'Amy Chen', email: 'amychen@example.com', phone: '555-2345' },\n    { name: 'Mike Davis', email: 'mikedavis@example.com', phone: '555-6789' },\n    { name: 'Sara Kim', email: 'sarakim@example.com', phone: '555-0123' },\n    { name: 'Tom Nguyen', email: 'tomnguyen@example.com', phone: '555-4567' },\n    { name: 'Rachel Patel', email: 'rachelpatel@example.com', phone: '555-8901' },\n    { name: 'Chris Wilson', email: 'chriswilson@example.com', phone: '555-3456' },\n    { name: 'Julie Garcia', email: 'juliegarcia@example.com', phone: '555-7890' },\n    { name: 'Tony Park', email: 'tonypark@example.com', phone: '555-2345' },\n    { name: 'Lauren Hernandez', email: 'laurenhernandez@example.com', phone: '555-6789' },\n    { name: 'Kevin Chen', email: 'kevinchen@example.com', phone: '555-0123' },\n    { name: 'Emily Lee', email: 'emilylee@example.com', phone: '555-4567' },\n    { name: 'Benjamin Kim', email: 'benjaminkim@example.com', phone: '555-8901' },\n    { name: 'Grace Jones', email: 'gracejones@example.com', phone: '555-3456' },\n    { name: 'Justin Singh', email: 'justinsingh@example.com', phone: '555-7890' },\n    { name: 'Hannah Park', email: 'hannahpark@example.com', phone: '555-2345' }\n];\n\n\nexport default function SearchBoxItems() {\n    const queryFunc = (params) => {\n        let items;\n\n        if (params.query) {\n            items = contacts.filter(x => x.name.startsWith(params.query));\n        } else {\n            items = contacts;\n        }\n\n        return [items, items.length];\n    }\n\n    const { items, isLoading, params, dispatchParams } = useSearchBox(queryFunc, { query: undefined })\n\n    return (\n        <Stack w={'100%'} h={'80'}>\n            <Search {...{ dispatchParams, paramKey: 'query', defaultValue: params.query, debounceTimeout: 100 }} />\n            <Box\n                boxSize={'100%'}\n                overflow={'hidden'}\n                shadow={'inner'}\n                className='border__solid'\n                p={'4'}\n                pos={'relative'}\n            >\n                {isLoading ? <Preloader /> : <List items={items} />}\n            </Box>\n        </Stack>\n    )\n}","import { Box, Heading, HStack, Stack, Text } from \"@chakra-ui/react\";\nimport GithubCorner from \"components/GtihubCorner\";\nimport HintBox from \"components/HintBox\";\nimport { SearchBoxContacts, SearchBoxDomains, SearchBoxLetters } from \"components/SearchBoxDemo\";\nimport { memo } from \"react\";\n\nconst ColWrapper = memo(({ children }) => {\n    return (\n        <Stack spacing={'8'} w={['100%', 'sm']}>\n            {children}\n        </Stack>\n    )\n})\n\nconst HomePage = () => {\n    return (\n        <>\n            <Stack\n                pos={'fixed'}\n                left={0} top={0}\n                w={'100vw'} h={'100vh'}\n                p={'10'}\n                px={['4', '10']}\n                gap={'10'}\n                spacing={0}\n                overflow={'auto'}\n            >\n                <Box>\n                    <Heading>React Search Box Hooks</Heading>\n                    <Text opacity={0.85}>Construct search boxes with filters, using callbacks</Text>\n                </Box>\n\n                <HStack spacing={0} flex={1} gap={'10'} flexWrap={'wrap'}\n                    justifyContent={'center'} alignItems={'center'}\n                >\n                    <ColWrapper>\n                        <HintBox>\n                            <Heading fontSize={'md'}>Data Callbacks</Heading>\n                            <Box opacity={0.5}>\n                                <Text fontSize={'smaller'}>Hooks for searching in memory sources.</Text>\n                                <Text fontSize={'smaller'}>Example of search person in contacts list.</Text>\n                            </Box>\n                        </HintBox>\n\n                        <HintBox>\n                            <SearchBoxContacts />\n                        </HintBox>\n                    </ColWrapper>\n\n                    <ColWrapper>\n                        <HintBox>\n                            <Heading fontSize={'md'}>Fetch API Callbacks</Heading>\n                            <Box opacity={0.5}>\n                                <Text fontSize={'smaller'}>Hooks for contructing api based searches.</Text>\n                                <Text fontSize={'smaller'}>Example of search domain name using api request.</Text>\n                            </Box>\n                        </HintBox>\n\n                        <HintBox>\n                            <SearchBoxDomains />\n                        </HintBox>\n                    </ColWrapper>\n\n                    <ColWrapper>\n                        <HintBox>\n                            <Heading fontSize={'md'}>Custom Callbacks</Heading>\n                            <Box opacity={0.5}>\n                                <Text fontSize={'smaller'}>Using hooks as a flexible base for custom data callbacks.</Text>\n                                <Text fontSize={'smaller'}>Example of search and category values split into letters.</Text>\n                            </Box>\n                        </HintBox>\n\n                        <HintBox>\n                            <SearchBoxLetters />\n                        </HintBox>\n                    </ColWrapper>\n                </HStack>\n            </Stack>\n            <GithubCorner />\n        </>\n    )\n}\n\nexport default HomePage;"],"names":["width","height","className","viewBox","d","fill","href","isExternal","HintBox","children","pos","size","bg","left","top","isEmpty","value","trim","length","withDebounce","timeout","callback","debounceRef","onCancel","clearTimeout","current","setTimeout","useSearchBox","queryFunc","initParams","useState","items","setItems","totalCount","setTotalCount","isLoading","setLoading","useRef","useReducer","state","payload","update","Array","isArray","reduce","prev","curr","Object","assign","key","object1","object2","keys1","keys","keys2","shallowEquals","params","dispatchParams","onSearch","useCallback","Error","startTransition","resItems","resTotal","useEffect","Preloader","boxSize","backdropFilter","backdropBlur","Search","defaultValue","paramKey","debounceTimeout","ref","isClearable","setClearable","onChange","e","_reactName","target","onInput","onClear","undefined","useSearchBoxInput","I","pr","placeholder","icon","onClick","List","memo","overflow","map","item","index","isLazy","isOpen","onClose","domain","as","Stack","A","join","country","isDead","update_date","SearchBoxDomains","Promise","resolve","query","fetch","then","res","json","domains","total","catch","totalItems","cat","w","h","fontSize","shadow","p","Categories","px","isActive","pointerEvents","bind","SelectList","flexWrap","spacing","alignItems","gap","SearchBoxLetters","reject","text","filter","x","from","name","email","phone","contacts","SearchBoxItems","startsWith","ColWrapper","opacity","flex","justifyContent"],"sourceRoot":""}